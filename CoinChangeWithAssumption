package DynamicProgramming;

public class CoinChangeWithAssumption {

	public CoinChangeWithAssumption() {
		// TODO Auto-generated constructor stub
	}

	static int coinChange(int[] coins, int amount) {
		int table[] = new int[amount + 1];
		table[0] = 0;
		boolean flag = false;

		for (int j = 1; j <= amount; j++) {
			int minValue = Integer.MAX_VALUE;
			for (int i = 0; i < coins.length; i++) {
				if (j - coins[i] >= 0) {
					if (j == amount && table[j - coins[i]] != Integer.MAX_VALUE)
						flag = true;
					if (minValue > (table[j - coins[i]] + 1) && table[j - coins[i]] != minValue) {
						minValue = table[j - coins[i]] + 1;
					}
				}
			}
			table[j] = minValue;
		}
		if (!flag)
			return -1;
		else
			return table[amount];
	}

	public static void main(String[] args) {
		int n = 11 ;
		int denominations[] = {1, 2, 5};
		System.out.println(coinChange(denominations, n));
	}
}
